{"version":3,"sources":["dateFormart.js"],"names":["getSmpFormatDate","date","isFull","pattern","undefined","getFormatDate","getSmpFormatNowDate","Date","getSmpFormatDateByLong","l","getFormatDateByLong","format","prototype","o","M+","this","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"mappings":"AA4BI,QAASA,kBAAiBC,EAAMC,GAC5B,GAAIC,GAAU,EAMd,OAJIA,GADU,GAAVD,OAA4BE,IAAVF,EACR,sBAEA,aAEPG,cAAcJ,EAAME,GAW/B,QAASG,qBAAoBJ,GACzB,MAAOF,kBAAiB,GAAIO,MAAQL,GAWxC,QAASM,wBAAuBC,EAAGP,GAC/B,MAAOF,kBAAiB,GAAIO,MAAKE,GAAIP,GASzC,QAASQ,qBAAoBD,EAAGN,GAC5B,MAAOE,eAAc,GAAIE,MAAKE,GAAIN,GAQtC,QAASE,eAAcJ,EAAME,GAOzB,WANYC,IAARH,IACAA,EAAO,GAAIM,WAEAH,IAAXD,IACAA,EAAU,uBAEPF,EAAKU,OAAOR,GApF3BI,KAAKK,UAAUD,OAAS,SAAUA,GAC1B,GAAIE,IACAC,KAAMC,KAAKC,WAAa,EACxBC,KAAMF,KAAKG,UACXC,KAAMJ,KAAKK,WACXC,KAAMN,KAAKO,aACXC,KAAMR,KAAKS,aACXC,KAAMC,KAAKC,OAAOZ,KAAKC,WAAa,GAAK,GACzCY,EAAKb,KAAKc,kBAEV,QAAOC,KAAKnB,KACZA,EAASA,EAAOoB,QAAQC,OAAOC,IAAKlB,KAAKmB,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,SAEtF,KAAK,GAAIC,KAAKxB,GACN,GAAImB,QAAO,IAAMK,EAAI,KAAKP,KAAKnB,KAC/BA,EAASA,EAAOoB,QAAQC,OAAOC,GAAwB,GAApBD,OAAOC,GAAGG,OAAcvB,EAAEwB,IAAM,KAAOxB,EAAEwB,IAAIF,QAAQ,GAAKtB,EAAEwB,IAAID,SAG3G,OAAOzB","file":"../js/dateFormart.js","sourcesContent":["Date.prototype.format = function (format) {  \r\n        var o = {  \r\n            \"M+\": this.getMonth() + 1,  \r\n            \"d+\": this.getDate(),  \r\n            \"h+\": this.getHours(),  \r\n            \"m+\": this.getMinutes(),  \r\n            \"s+\": this.getSeconds(),  \r\n            \"q+\": Math.floor((this.getMonth() + 3) / 3),  \r\n            \"S\": this.getMilliseconds()  \r\n        };\r\n        if (/(y+)/.test(format)) {  \r\n            format = format.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));  \r\n        }  \r\n        for (var k in o) {  \r\n            if (new RegExp(\"(\" + k + \")\").test(format)) {  \r\n                format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));  \r\n            }  \r\n        }  \r\n        return format;  \r\n    }  \r\n    /**   \r\n    *转换日期对象为日期字符串   \r\n    * @param date 日期对象   \r\n    * @param isFull 是否为完整的日期数据,   \r\n    *               为true时, 格式如\"2000-03-05 01:05:04\"   \r\n    *               为false时, 格式如 \"2000-03-05\"   \r\n    * @return 符合要求的日期字符串   \r\n    */    \r\n    function getSmpFormatDate(date, isFull) {  \r\n        var pattern = \"\";  \r\n        if (isFull == true || isFull == undefined) {  \r\n            pattern = \"yyyy-MM-dd hh:mm:ss\";  \r\n        } else {  \r\n            pattern = \"yyyy-MM-dd\";  \r\n        }  \r\n        return getFormatDate(date, pattern);  \r\n    }  \r\n    /**   \r\n    *转换当前日期对象为日期字符串   \r\n    * @param date 日期对象   \r\n    * @param isFull 是否为完整的日期数据,   \r\n    *               为true时, 格式如\"2000-03-05 01:05:04\"   \r\n    *               为false时, 格式如 \"2000-03-05\"   \r\n    * @return 符合要求的日期字符串   \r\n    */    \r\n  \r\n    function getSmpFormatNowDate(isFull) {  \r\n        return getSmpFormatDate(new Date(), isFull);  \r\n    }  \r\n    /**   \r\n    *转换long值为日期字符串   \r\n    * @param l long值   \r\n    * @param isFull 是否为完整的日期数据,   \r\n    *               为true时, 格式如\"2000-03-05 01:05:04\"   \r\n    *               为false时, 格式如 \"2000-03-05\"   \r\n    * @return 符合要求的日期字符串   \r\n    */    \r\n  \r\n    function getSmpFormatDateByLong(l, isFull) {  \r\n        return getSmpFormatDate(new Date(l), isFull);  \r\n    }  \r\n    /**   \r\n    *转换long值为日期字符串   \r\n    * @param l long值   \r\n    * @param pattern 格式字符串,例如：yyyy-MM-dd hh:mm:ss   \r\n    * @return 符合要求的日期字符串   \r\n    */    \r\n  \r\n    function getFormatDateByLong(l, pattern) {  \r\n        return getFormatDate(new Date(l), pattern);  \r\n    }  \r\n    /**   \r\n    *转换日期对象为日期字符串   \r\n    * @param l long值   \r\n    * @param pattern 格式字符串,例如：yyyy-MM-dd hh:mm:ss   \r\n    * @return 符合要求的日期字符串   \r\n    */    \r\n    function getFormatDate(date, pattern) {  \r\n        if (date == undefined) {  \r\n            date = new Date();  \r\n        }  \r\n        if (pattern == undefined) {  \r\n            pattern = \"yyyy-MM-dd hh:mm:ss\";  \r\n        }  \r\n        return date.format(pattern);  \r\n    }  \r\n   \r\n    //alert(getSmpFormatDate(new Date(1279849429000), true));  \r\n    //alert(getSmpFormatDate(new Date(1279849429000),false));      \r\n    //alert(getSmpFormatDateByLong(1279829423000, true));  \r\n    //alert(getSmpFormatDateByLong(1279829423000,false));      \r\n    //alert(getFormatDateByLong(1279829423000, \"yyyy-MM\"));  \r\n    //alert(getFormatDate(new Date(1279829423000), \"yy-MM\"));  \r\n    //alert(getFormatDateByLong(1279849429000, \"yyyy-MM hh:mm\"));\r\n    \r\n    //alert(getFormatDate(new Date(),'MM/dd'));"]}